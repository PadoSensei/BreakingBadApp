{"version":3,"sources":["img/logo.png","components/ui/Header.js","components/characters/CharacterItem.js","img/spinner.gif","components/ui/Spinner.js","components/characters/CharacterGrid.js","components/ui/Search.js","components/ui/QuoteBar.js","App.js","index.js"],"names":["Header","className","src","logo","alt","CharacterItem","item","img","name","portrayed","nickname","birthday","occupation","Spinner","spinner","style","width","margin","display","CharacterGrid","items","isLoading","map","char_id","Search","getQuery","useState","text","setText","type","placeholder","value","onChange","e","q","target","autoFocus","QuoteBar","quotes","random","Math","floor","length","textAlign","quote","author","App","setItems","setIsLoading","query","setQuery","setQuotes","useEffect","a","axios","result","allQuotes","data","fetchItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,G,MAAA,IAA0B,kCCU1BA,EARA,WACb,OACE,wBAAQC,UAAU,SAAlB,SACE,qBAAKC,IAAKC,EAAMC,IAAI,QCyBXC,EA9BO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,qBAAKL,UAAU,OAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKC,IAAKI,EAAKC,IAAKH,IAAI,OAE1B,sBAAKH,UAAU,YAAf,UACE,6BAAKK,EAAKE,OACV,+BACE,+BACE,iDADF,IACgCF,EAAKG,aAErC,+BACE,+CADF,IAC8BH,EAAKI,YAEnC,+BACE,+CADF,IAC8BJ,EAAKK,YAEnC,+BACE,iDADF,IACgCL,EAAKM,WAAW,kBCpB7C,MAA0B,oCCY1BC,EAVC,WACd,OACE,qBACEX,IAAKY,EACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,SAClDd,IAAI,gBCKKe,EARO,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MACtB,OAD6C,EAAhBC,UACV,cAAC,EAAD,IAAc,yBAASpB,UAAU,QAAnB,SAC9BmB,EAAME,KAAI,SAAChB,GAAD,OACT,cAAC,EAAD,CAAkCA,KAAMA,GAApBA,EAAKiB,eCoBhBC,EAzBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACPC,mBAAS,IADF,mBACxBC,EADwB,KAClBC,EADkB,KAQ/B,OACE,yBAAS3B,UAAU,SAAnB,SACE,+BACE,uBACE4B,KAAK,OACL5B,UAAU,eACV6B,YAAY,mBACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAbAC,EAagBD,EAAEE,OAAOJ,MAZvCH,EAAQM,QACRT,EAASS,GAFI,IAACA,GAcVE,WAAS,SCDJC,EAhBE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQjB,EAAgB,EAAhBA,UAEtBkB,EAASD,EAAOE,KAAKC,MAAMD,KAAKD,SAASD,EAAOI,SAEpD,OACErB,EAAY,uBACZ,0BAASpB,UAAU,YAAnB,UACI,oBAAIc,MAAO,CAAC4B,UAAW,UAAvB,SAAmC,kCAAKJ,EAAOK,MAAZ,SACnC,uBAEA,oBAAI7B,MAAO,CAAC4B,UAAW,SAAvB,SAAkC,iCAASJ,EAAOM,eCgC3CC,EApCH,WAAO,IAAD,EACUpB,mBAAS,IADnB,mBACTN,EADS,KACF2B,EADE,OAEkBrB,oBAAS,GAF3B,mBAETL,EAFS,KAEE2B,EAFF,OAGUtB,mBAAS,IAHnB,mBAGTuB,EAHS,KAGFC,EAHE,OAIYxB,mBAAS,IAJrB,mBAITY,EAJS,KAIDa,EAJC,KA0BhB,OAjBAC,qBAAU,YACQ,uCAAG,8BAAAC,EAAA,sEACIC,IAAM,sDAAD,OAAuDL,IADhE,cACXM,EADW,gBAEOD,IAAM,6CAFb,OAEXE,EAFW,OAIjBL,EAAUK,EAAUC,MACpBV,EAASQ,EAAOE,MAChBT,GAAa,GANI,2CAAH,qDAShBU,KACC,CAACT,IAOF,sBAAKhD,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUqC,OAAQA,EAAQjB,UAAWA,IACrC,cAAC,EAAD,CAAQI,SAAU,SAACS,GAAD,OAAOgB,EAAUhB,MACnC,cAAC,EAAD,CAAeb,UAAWA,EAAWD,MAAOA,QCjClDuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dad2610f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import React from 'react'\nimport logo from '../../img/logo.png'\nconst Header = () => {\n  return (\n    <header className='center'>\n      <img src={logo} alt='' />\n    </header>\n  )\n}\n\nexport default Header\n","const CharacterItem = ({ item }) => {\n  return (\n    <div className='card'>\n      <div className='card-inner'>\n        <div className='card-front'>\n          <img src={item.img} alt='' />\n        </div>\n        <div className='card-back'>\n          <h1>{item.name}</h1>\n          <ul>\n            <li>\n              <strong>Actor Name:</strong> {item.portrayed}\n            </li>\n            <li>\n              <strong>Nickname:</strong> {item.nickname}\n            </li>\n            <li>\n              <strong>Birthday:</strong> {item.birthday}\n            </li>\n            <li>\n              <strong>Occupation:</strong> {item.occupation[0]}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default CharacterItem\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from 'react'\nimport spinner from '../../img/spinner.gif'\nconst Spinner = () => {\n  return (\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n      />\n  )\n}\n\nexport default Spinner\n","import React from 'react'\nimport CharacterItem from './CharacterItem'\nimport Spinner from '../ui/Spinner'\n\nconst CharacterGrid = ({items, isLoading }) => {\n  return isLoading ? <Spinner /> : <section className='cards'>\n    {items.map((item) => (\n      <CharacterItem key={item.char_id} item={item}></CharacterItem>\n    ))}\n  </section>\n}\n\nexport default CharacterGrid\n","import React, { useState } from 'react'\n\nconst Search = ({ getQuery }) => {\n  const [text, setText] = useState('')\n\n  const onChange = (q) => {\n      setText(q)\n      getQuery(q)\n  }\n\n  return (\n    <section className=\"search\">\n      <form>\n        <input \n          type='text'\n          className='form-control'\n          placeholder='Seach characters'\n          value={text}\n          onChange={(e) => onChange(e.target.value)}\n          autoFocus\n        />\n      </form>\n      \n    </section>\n  )\n}\n\nexport default Search\n","import React, { useState, useEffect } from 'react'\n\nconst QuoteBar = ({ quotes, isLoading }) => {\n\n  let random = quotes[Math.floor(Math.random()*quotes.length)];\n  \n  return (\n    isLoading ? <h5></h5> :\n    <section className='quote-bar'>\n        <h1 style={{textAlign: 'center' }}><i>\"{random.quote}\"</i></h1>\n        <br></br>\n    \n        <h3 style={{textAlign: 'right' }}><strong>{random.author}</strong></h3>\n        \n    </section>\n  )\n}\n\nexport default QuoteBar\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './App.css';\nimport Header from './components/ui/Header'\nimport CharacterGrid from './components/characters/CharacterGrid'\nimport Search from './components/ui/Search'\nimport QuoteBar from './components/ui/QuoteBar'\n\nconst App = () => {\n  const [items, setItems] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [query, setQuery] = useState('')\n  const [quotes, setQuotes] = useState([])\n\n\n\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const result = await axios(`https://www.breakingbadapi.com/api/characters?name=${query}`)\n      const allQuotes = await axios(`https://www.breakingbadapi.com/api/quotes`)\n \n      setQuotes(allQuotes.data)\n      setItems(result.data)\n      setIsLoading(false)\n    }\n\n    fetchItems()\n  }, [query])\n\n  //let randomQuote = quotes[Math.floor(Math.random()*quotes.length)];\n  // console.log(quotes[5])\n  // let random  = quotes[5]\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <QuoteBar quotes={quotes} isLoading={isLoading} />\n      <Search getQuery={(q) => setQuery (q)} />\n      <CharacterGrid isLoading={isLoading} items={items} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}